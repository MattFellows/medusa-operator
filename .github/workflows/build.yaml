name: medusa-operator build

on:
  push:
    branches:
      - master

  pull_request:
    branches: [ master ]

jobs:
  testing:
    name: Run unit tests
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      GOROOT: /usr/local/go1.15
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go

      - name: Setup Protoc
        uses: arduino/setup-protoc@v1

      - name: Setup gRPC Go Plugins
        run: |
          export GO111MODULE=on
          go get google.golang.org/protobuf/cmd/protoc-gen-go google.golang.org/grpc/cmd/protoc-gen-go-grpc sigs.k8s.io/kustomize/v3

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run unit tests
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          make test
  push_docker_image:
    runs-on: ubuntu-latest
    needs: testing
    if: github.ref == 'refs/heads/master'
    name: Build medusa-operator image
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Set git parsed values
        id: vars
        run: |
          echo ::set-output name=sha_short::$(git rev-parse --short=8 ${{ github.sha }})
          echo ::set-output name=tag_name::${GITHUB_REF#refs/tags/}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          tags: k8ssandra/medusa-operator:${{ steps.vars.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Checkout k8ssandra charts
        uses: actions/checkout@v2
        with:
          repository: k8ssandra/k8ssandra
          path: k8ssandra
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go
      - name: Create updated CRD
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          ./kustomize build config/crd > k8ssandra/charts/medusa-operator/crds/medusa.yaml
      - name: Send an update to k8ssandra
        run: |
          cd k8ssandra
          pip3 install ruamel.yaml
          # Update values.yaml's tag to use the newly built image
          scripts/image-update.py --chart medusa-operator --tag ${{ steps.vars.outputs.sha_short }}
          # Run Python update script to update chart versions to x.xx.x+1
          scripts/helm-version.py --incr minor --chart medusa-operator --dep
      - name: Create PR to k8ssandra
        id: master-pr
        uses: peter-evans/create-pull-request@v3
        with:
          path: k8ssandra
          commit-message: Automated update from medusa-operator
          delete-branch: true
          title: Update medusa-operator to ${{ steps.vars.outputs.sha_short }}
          body: |
            This is auto-generated update from the medusa-operator's github actions.
      - name: Log outputs
        run: |
          echo "Pull request number ${{Â steps.master-pr.outputs.pull-request-number }}"
